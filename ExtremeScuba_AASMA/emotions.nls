to divers-deliberative-BDI-emotions-loop
    ;;if goal-succeeded?
    ;;[stop]

  set last-action ""
  ifelse not (empty-plan? plan or intention-succeeded? intention or impossible-intention? intention)
  [
    execute-plan-action
    update-beliefs
    if random-float 1 < 0.1 [
      set desire BDI-options
      set intention BDI-filter
    ]
  ]
  [
    update-beliefs-candidates
    update-emotions-about-information
    ;; Check the robot's options
    set desire BDI-options-considering-emotions
    set intention BDI-filter-considering-emotions
    set plan build-plan-for-intention intention
    update-emotions-about-information
    ;; If it could not build a plan, the robot should behave as a reactive agent
    if(empty-plan? plan)
      [divers-reactive-loop ]
  ]
end

to update-beliefs-candidates
  update-visible-divers
  update-visible-bubbles
  update-visible-gambozinos
  update-visible-urchins
  update-known
end

to update-emotions-about-information
  ;;foreach known-bubbles [let id get-id-struct ? if id != who [set known-divers add-love known-divers id]]
  ;;foreach known-gambozinos [let id get-id-struct ? if id != who [set known-divers add-love known-divers id]]
  ;;foreach known-urchins [let id get-id-struct ? if id != who [set known-divers add-love known-divers id]]
  ;;foreach known-divers [let id get-id-struct ? if id != who [set known-divers add-love known-divers id]]
end

to update-beliefs-considering-emotions
end

to-report BDI-filter-considering-emotions
  let objective 0
  ifelse desire = "caught-oxygen" 
  [
    if empty? known-bubbles [report build-empty-intention]
    set objective one-of known-bubbles
    report build-intention desire objective
  ] ;;catch oxygen
  [ifelse desire = "run-from-urchins"
    [
      set objective feared

      report build-intention desire objective
     ];;run from feared
    [if-else desire = "attack"
      [
        set objective feared

        report build-intention desire objective
      ];;attack feared
      [if-else desire = "help"
        [
          set objective loved

          report build-intention desire objective
        ];;haha
        [if desire = "caught-gambozino"
          [
          if empty? known-gambozinos [report build-empty-intention]
          set objective one-of known-gambozinos
          report build-intention desire objective
          ]
    ]]]]
  report build-empty-intention
end

to-report BDI-options-considering-emotions
  
  
  ifelse is-fear? and is-low-oxygen? [report "caught-oxygen"]
  [
    if-else is-fear? and not empty? feared [report "run-from-urchins"]
    [
      ifelse is-anger? and not empty? angered [report "attack-urchins"]
      [
        ifelse is-love? and not empty? loved[report "help"]
        [report "caught-gambozinos"]
      ]
    ]
  ]
end

to-report is-fear? 
  report fear > 0.5
end

to-report is-love? 
  report love > 0.5
end

to-report is-anger? 
  report anger > 0.5
end